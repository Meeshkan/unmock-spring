plugins {
    id 'java-library'
    id 'maven'
    id 'signing'
}

group 'io.unmock'
version '0.0.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

archivesBaseName = 'spring'

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'unmock-spring'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Core functions with which one can build an unmock java integration'
                url 'http://www.example.com/example-application'

                scm {
                    connection 'https://github.com/unmock/unmock-spring.git'
                    developerConnection 'https://github.com/unmock/unmock-spring'
                    url 'https://github.com/unmock/unmock-spring'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'mikesol'
                        name 'Mike Solomon'
                        email 'mike@meeshkan.com'
                    }
                }
            }
        }
    }
}

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    compile group: 'io.unmock', name: 'core', version: '0.0.0'
    compile group: 'io.unmock', name: 'okhttp', version: '0.0.0-SNAPSHOT'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.14.0'
    compile group: 'org.springframework', name: 'spring-web', version: '5.1.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-test', version: '5.1.5.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.json', name: 'json', version: '20180130'
    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
}
